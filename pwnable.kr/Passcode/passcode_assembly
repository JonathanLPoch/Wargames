
passcode:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x32b>
  400248:	78 38                	js     400282 <_init-0x31e>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 f7                	add    %dh,%bh
  400285:	55                   	push   %rbp
  400286:	1d d0 c1 59 93       	sbb    $0x9359c1d0,%eax
  40028b:	a2 80 0a a5 ca 5d aa 	movabs %al,0x9279aa5dcaa50a80
  400292:	79 92 
  400294:	16                   	(bad)  
  400295:	03 21                	add    (%rcx),%esp
  400297:	53                   	push   %rbx

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	02 00                	add    (%rax),%al
  40029a:	00 00                	add    %al,(%rax)
  40029c:	0a 00                	or     (%rax),%al
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
  4002a2:	00 00                	add    %al,(%rax)
  4002a4:	06                   	(bad)  
  4002a5:	00 00                	add    %al,(%rax)
  4002a7:	00 00                	add    %al,(%rax)
  4002a9:	00 20                	add    %ah,(%rax)
  4002ab:	00 80 00 00 00 00    	add    %al,0x0(%rax)
  4002b1:	00 00                	add    %al,(%rax)
  4002b3:	00 0a                	add    %cl,(%rdx)
  4002b5:	00 00                	add    %al,(%rax)
  4002b7:	00 67 55             	add    %ah,0x55(%rdi)
  4002ba:	61                   	(bad)  
  4002bb:	10                   	.byte 0x10

Disassembly of section .dynsym:

00000000004002c0 <.dynsym>:
	...
  4002d8:	26 00 00             	add    %al,%es:(%rax)
  4002db:	00 12                	add    %dl,(%rdx)
	...
  4002ed:	00 00                	add    %al,(%rax)
  4002ef:	00 2b                	add    %ch,(%rbx)
  4002f1:	00 00                	add    %al,(%rax)
  4002f3:	00 12                	add    %dl,(%rdx)
	...
  400305:	00 00                	add    %al,(%rax)
  400307:	00 49 00             	add    %cl,0x0(%rcx)
  40030a:	00 00                	add    %al,(%rax)
  40030c:	12 00                	adc    (%rax),%al
	...
  40031e:	00 00                	add    %al,(%rax)
  400320:	42 00 00             	rex.X add %al,(%rax)
  400323:	00 12                	add    %dl,(%rdx)
	...
  400335:	00 00                	add    %al,(%rax)
  400337:	00 50 00             	add    %dl,0x0(%rax)
  40033a:	00 00                	add    %al,(%rax)
  40033c:	12 00                	adc    (%rax),%al
	...
  40034e:	00 00                	add    %al,(%rax)
  400350:	62                   	(bad)  
  400351:	00 00                	add    %al,(%rax)
  400353:	00 20                	add    %ah,(%rax)
	...
  400365:	00 00                	add    %al,(%rax)
  400367:	00 0b                	add    %cl,(%rbx)
  400369:	00 00                	add    %al,(%rax)
  40036b:	00 12                	add    %dl,(%rdx)
	...
  40037d:	00 00                	add    %al,(%rax)
  40037f:	00 17                	add    %dl,(%rdi)
  400381:	00 00                	add    %al,(%rax)
  400383:	00 12                	add    %dl,(%rdx)
	...
  400395:	00 00                	add    %al,(%rax)
  400397:	00 12                	add    %dl,(%rdx)
  400399:	00 00                	add    %al,(%rax)
  40039b:	00 12                	add    %dl,(%rdx)
	...
  4003ad:	00 00                	add    %al,(%rax)
  4003af:	00 3c 00             	add    %bh,(%rax,%rax,1)
  4003b2:	00 00                	add    %al,(%rax)
  4003b4:	11 00                	adc    %eax,(%rax)
  4003b6:	1a 00                	sbb    (%rax),%al
  4003b8:	70 10                	jo     4003ca <_init-0x1d6>
  4003ba:	60                   	(bad)  
  4003bb:	00 00                	add    %al,(%rax)
  4003bd:	00 00                	add    %al,(%rax)
  4003bf:	00 08                	add    %cl,(%rax)
  4003c1:	00 00                	add    %al,(%rax)
  4003c3:	00 00                	add    %al,(%rax)
  4003c5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

00000000004003c8 <.dynstr>:
  4003c8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  4003cc:	63 2e                	movslq (%rsi),%ebp
  4003ce:	73 6f                	jae    40043f <_init-0x161>
  4003d0:	2e 36 00 66 66       	cs add %ah,%ss:0x66(%rsi)
  4003d5:	6c                   	insb   (%dx),%es:(%rdi)
  4003d6:	75 73                	jne    40044b <_init-0x155>
  4003d8:	68 00 65 78 69       	pushq  $0x69786500
  4003dd:	74 00                	je     4003df <_init-0x1c1>
  4003df:	5f                   	pop    %rdi
  4003e0:	5f                   	pop    %rdi
  4003e1:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
  4003e8:	73 63                	jae    40044d <_init-0x153>
  4003ea:	61                   	(bad)  
  4003eb:	6e                   	outsb  %ds:(%rsi),(%dx)
  4003ec:	66 00 70 75          	data16 add %dh,0x75(%rax)
  4003f0:	74 73                	je     400465 <_init-0x13b>
  4003f2:	00 5f 5f             	add    %bl,0x5f(%rdi)
  4003f5:	73 74                	jae    40046b <_init-0x135>
  4003f7:	61                   	(bad)  
  4003f8:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
  4003fb:	63 68 6b             	movslq 0x6b(%rax),%ebp
  4003fe:	5f                   	pop    %rdi
  4003ff:	66 61                	data16 (bad) 
  400401:	69 6c 00 73 74 64 69 	imul   $0x6e696474,0x73(%rax,%rax,1),%ebp
  400408:	6e 
  400409:	00 70 72             	add    %dh,0x72(%rax)
  40040c:	69 6e 74 66 00 73 79 	imul   $0x79730066,0x74(%rsi),%ebp
  400413:	73 74                	jae    400489 <_init-0x117>
  400415:	65 6d                	gs insl (%dx),%es:(%rdi)
  400417:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40041a:	6c                   	insb   (%dx),%es:(%rdi)
  40041b:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400422:	72 74                	jb     400498 <_init-0x108>
  400424:	5f                   	pop    %rdi
  400425:	6d                   	insl   (%dx),%es:(%rdi)
  400426:	61                   	(bad)  
  400427:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  40042e:	6f                   	outsl  %ds:(%rsi),(%dx)
  40042f:	6e                   	outsb  %ds:(%rsi),(%dx)
  400430:	5f                   	pop    %rdi
  400431:	73 74                	jae    4004a7 <_init-0xf9>
  400433:	61                   	(bad)  
  400434:	72 74                	jb     4004aa <_init-0xf6>
  400436:	5f                   	pop    %rdi
  400437:	5f                   	pop    %rdi
  400438:	00 47 4c             	add    %al,0x4c(%rdi)
  40043b:	49                   	rex.WB
  40043c:	42                   	rex.X
  40043d:	43 5f                	rex.XB pop %r15
  40043f:	32 2e                	xor    (%rsi),%ch
  400441:	37                   	(bad)  
  400442:	00 47 4c             	add    %al,0x4c(%rdi)
  400445:	49                   	rex.WB
  400446:	42                   	rex.X
  400447:	43 5f                	rex.XB pop %r15
  400449:	32 2e                	xor    (%rsi),%ch
  40044b:	34 00                	xor    $0x0,%al
  40044d:	47                   	rex.RXB
  40044e:	4c                   	rex.WR
  40044f:	49                   	rex.WB
  400450:	42                   	rex.X
  400451:	43 5f                	rex.XB pop %r15
  400453:	32 2e                	xor    (%rsi),%ch
  400455:	32 2e                	xor    (%rsi),%ch
  400457:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

000000000040045a <.gnu.version>:
  40045a:	00 00                	add    %al,(%rax)
  40045c:	02 00                	add    (%rax),%al
  40045e:	03 00                	add    (%rax),%eax
  400460:	02 00                	add    (%rax),%al
  400462:	02 00                	add    (%rax),%al
  400464:	02 00                	add    (%rax),%al
  400466:	00 00                	add    %al,(%rax)
  400468:	02 00                	add    (%rax),%al
  40046a:	04 00                	add    $0x0,%al
  40046c:	02 00                	add    (%rax),%al
  40046e:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000400470 <.gnu.version_r>:
  400470:	01 00                	add    %eax,(%rax)
  400472:	03 00                	add    (%rax),%eax
  400474:	01 00                	add    %eax,(%rax)
  400476:	00 00                	add    %al,(%rax)
  400478:	10 00                	adc    %al,(%rax)
  40047a:	00 00                	add    %al,(%rax)
  40047c:	00 00                	add    %al,(%rax)
  40047e:	00 00                	add    %al,(%rax)
  400480:	17                   	(bad)  
  400481:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%rcx),%ebp
  400488:	71 00                	jno    40048a <_init-0x116>
  40048a:	00 00                	add    %al,(%rax)
  40048c:	10 00                	adc    %al,(%rax)
  40048e:	00 00                	add    %al,(%rax)
  400490:	14 69                	adc    $0x69,%al
  400492:	69 0d 00 00 03 00 7b 	imul   $0x7b,0x30000(%rip),%ecx        # 43049c <__FRAME_END__+0x2f91c>
  400499:	00 00 00 
  40049c:	10 00                	adc    %al,(%rax)
  40049e:	00 00                	add    %al,(%rax)
  4004a0:	75 1a                	jne    4004bc <_init-0xe4>
  4004a2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4004a8:	85 00                	test   %eax,(%rax)
  4004aa:	00 00                	add    %al,(%rax)
  4004ac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004004b0 <.rela.dyn>:
  4004b0:	f8                   	clc    
  4004b1:	0f 60 00             	punpcklbw (%rax),%mm0
  4004b4:	00 00                	add    %al,(%rax)
  4004b6:	00 00                	add    %al,(%rax)
  4004b8:	06                   	(bad)  
  4004b9:	00 00                	add    %al,(%rax)
  4004bb:	00 06                	add    %al,(%rsi)
	...
  4004c5:	00 00                	add    %al,(%rax)
  4004c7:	00 70 10             	add    %dh,0x10(%rax)
  4004ca:	60                   	(bad)  
  4004cb:	00 00                	add    %al,(%rax)
  4004cd:	00 00                	add    %al,(%rax)
  4004cf:	00 05 00 00 00 0a    	add    %al,0xa000000(%rip)        # a4004d5 <_end+0x9dff455>
	...

Disassembly of section .rela.plt:

00000000004004e0 <.rela.plt>:
  4004e0:	18 10                	sbb    %dl,(%rax)
  4004e2:	60                   	(bad)  
  4004e3:	00 00                	add    %al,(%rax)
  4004e5:	00 00                	add    %al,(%rax)
  4004e7:	00 07                	add    %al,(%rdi)
  4004e9:	00 00                	add    %al,(%rax)
  4004eb:	00 01                	add    %al,(%rcx)
	...
  4004f5:	00 00                	add    %al,(%rax)
  4004f7:	00 20                	add    %ah,(%rax)
  4004f9:	10 60 00             	adc    %ah,0x0(%rax)
  4004fc:	00 00                	add    %al,(%rax)
  4004fe:	00 00                	add    %al,(%rax)
  400500:	07                   	(bad)  
  400501:	00 00                	add    %al,(%rax)
  400503:	00 02                	add    %al,(%rdx)
	...
  40050d:	00 00                	add    %al,(%rax)
  40050f:	00 28                	add    %ch,(%rax)
  400511:	10 60 00             	adc    %ah,0x0(%rax)
  400514:	00 00                	add    %al,(%rax)
  400516:	00 00                	add    %al,(%rax)
  400518:	07                   	(bad)  
  400519:	00 00                	add    %al,(%rax)
  40051b:	00 03                	add    %al,(%rbx)
	...
  400525:	00 00                	add    %al,(%rax)
  400527:	00 30                	add    %dh,(%rax)
  400529:	10 60 00             	adc    %ah,0x0(%rax)
  40052c:	00 00                	add    %al,(%rax)
  40052e:	00 00                	add    %al,(%rax)
  400530:	07                   	(bad)  
  400531:	00 00                	add    %al,(%rax)
  400533:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  40053e:	00 00                	add    %al,(%rax)
  400540:	38 10                	cmp    %dl,(%rax)
  400542:	60                   	(bad)  
  400543:	00 00                	add    %al,(%rax)
  400545:	00 00                	add    %al,(%rax)
  400547:	00 07                	add    %al,(%rdi)
  400549:	00 00                	add    %al,(%rax)
  40054b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400551 <_init-0x4f>
  400551:	00 00                	add    %al,(%rax)
  400553:	00 00                	add    %al,(%rax)
  400555:	00 00                	add    %al,(%rax)
  400557:	00 40 10             	add    %al,0x10(%rax)
  40055a:	60                   	(bad)  
  40055b:	00 00                	add    %al,(%rax)
  40055d:	00 00                	add    %al,(%rax)
  40055f:	00 07                	add    %al,(%rdi)
  400561:	00 00                	add    %al,(%rax)
  400563:	00 07                	add    %al,(%rdi)
	...
  40056d:	00 00                	add    %al,(%rax)
  40056f:	00 48 10             	add    %cl,0x10(%rax)
  400572:	60                   	(bad)  
  400573:	00 00                	add    %al,(%rax)
  400575:	00 00                	add    %al,(%rax)
  400577:	00 07                	add    %al,(%rdi)
  400579:	00 00                	add    %al,(%rax)
  40057b:	00 08                	add    %cl,(%rax)
	...
  400585:	00 00                	add    %al,(%rax)
  400587:	00 50 10             	add    %dl,0x10(%rax)
  40058a:	60                   	(bad)  
  40058b:	00 00                	add    %al,(%rax)
  40058d:	00 00                	add    %al,(%rax)
  40058f:	00 07                	add    %al,(%rdi)
  400591:	00 00                	add    %al,(%rax)
  400593:	00 09                	add    %cl,(%rcx)
	...

Disassembly of section .init:

00000000004005a0 <_init>:
  4005a0:	48 83 ec 08          	sub    $0x8,%rsp
  4005a4:	48 8b 05 4d 0a 20 00 	mov    0x200a4d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4005ab:	48 85 c0             	test   %rax,%rax
  4005ae:	74 05                	je     4005b5 <_init+0x15>
  4005b0:	e8 9b 00 00 00       	callq  400650 <exit@plt+0x10>
  4005b5:	48 83 c4 08          	add    $0x8,%rsp
  4005b9:	c3                   	retq   

Disassembly of section .plt:

00000000004005c0 <puts@plt-0x10>:
  4005c0:	ff 35 42 0a 20 00    	pushq  0x200a42(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4005c6:	ff 25 44 0a 20 00    	jmpq   *0x200a44(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4005cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005d0 <puts@plt>:
  4005d0:	ff 25 42 0a 20 00    	jmpq   *0x200a42(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4005d6:	68 00 00 00 00       	pushq  $0x0
  4005db:	e9 e0 ff ff ff       	jmpq   4005c0 <_init+0x20>

00000000004005e0 <__stack_chk_fail@plt>:
  4005e0:	ff 25 3a 0a 20 00    	jmpq   *0x200a3a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4005e6:	68 01 00 00 00       	pushq  $0x1
  4005eb:	e9 d0 ff ff ff       	jmpq   4005c0 <_init+0x20>

00000000004005f0 <system@plt>:
  4005f0:	ff 25 32 0a 20 00    	jmpq   *0x200a32(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4005f6:	68 02 00 00 00       	pushq  $0x2
  4005fb:	e9 c0 ff ff ff       	jmpq   4005c0 <_init+0x20>

0000000000400600 <printf@plt>:
  400600:	ff 25 2a 0a 20 00    	jmpq   *0x200a2a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400606:	68 03 00 00 00       	pushq  $0x3
  40060b:	e9 b0 ff ff ff       	jmpq   4005c0 <_init+0x20>

0000000000400610 <__libc_start_main@plt>:
  400610:	ff 25 22 0a 20 00    	jmpq   *0x200a22(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400616:	68 04 00 00 00       	pushq  $0x4
  40061b:	e9 a0 ff ff ff       	jmpq   4005c0 <_init+0x20>

0000000000400620 <fflush@plt>:
  400620:	ff 25 1a 0a 20 00    	jmpq   *0x200a1a(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400626:	68 05 00 00 00       	pushq  $0x5
  40062b:	e9 90 ff ff ff       	jmpq   4005c0 <_init+0x20>

0000000000400630 <__isoc99_scanf@plt>:
  400630:	ff 25 12 0a 20 00    	jmpq   *0x200a12(%rip)        # 601048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400636:	68 06 00 00 00       	pushq  $0x6
  40063b:	e9 80 ff ff ff       	jmpq   4005c0 <_init+0x20>

0000000000400640 <exit@plt>:
  400640:	ff 25 0a 0a 20 00    	jmpq   *0x200a0a(%rip)        # 601050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400646:	68 07 00 00 00       	pushq  $0x7
  40064b:	e9 70 ff ff ff       	jmpq   4005c0 <_init+0x20>

Disassembly of section .plt.got:

0000000000400650 <.plt.got>:
  400650:	ff 25 a2 09 20 00    	jmpq   *0x2009a2(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400656:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400660 <_start>:
  400660:	31 ed                	xor    %ebp,%ebp
  400662:	49 89 d1             	mov    %rdx,%r9
  400665:	5e                   	pop    %rsi
  400666:	48 89 e2             	mov    %rsp,%rdx
  400669:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40066d:	50                   	push   %rax
  40066e:	54                   	push   %rsp
  40066f:	49 c7 c0 10 09 40 00 	mov    $0x400910,%r8
  400676:	48 c7 c1 a0 08 40 00 	mov    $0x4008a0,%rcx
  40067d:	48 c7 c7 64 08 40 00 	mov    $0x400864,%rdi
  400684:	e8 87 ff ff ff       	callq  400610 <__libc_start_main@plt>
  400689:	f4                   	hlt    
  40068a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400690 <deregister_tm_clones>:
  400690:	b8 6f 10 60 00       	mov    $0x60106f,%eax
  400695:	55                   	push   %rbp
  400696:	48 2d 68 10 60 00    	sub    $0x601068,%rax
  40069c:	48 83 f8 0e          	cmp    $0xe,%rax
  4006a0:	48 89 e5             	mov    %rsp,%rbp
  4006a3:	76 1b                	jbe    4006c0 <deregister_tm_clones+0x30>
  4006a5:	b8 00 00 00 00       	mov    $0x0,%eax
  4006aa:	48 85 c0             	test   %rax,%rax
  4006ad:	74 11                	je     4006c0 <deregister_tm_clones+0x30>
  4006af:	5d                   	pop    %rbp
  4006b0:	bf 68 10 60 00       	mov    $0x601068,%edi
  4006b5:	ff e0                	jmpq   *%rax
  4006b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4006be:	00 00 
  4006c0:	5d                   	pop    %rbp
  4006c1:	c3                   	retq   
  4006c2:	0f 1f 40 00          	nopl   0x0(%rax)
  4006c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006cd:	00 00 00 

00000000004006d0 <register_tm_clones>:
  4006d0:	be 68 10 60 00       	mov    $0x601068,%esi
  4006d5:	55                   	push   %rbp
  4006d6:	48 81 ee 68 10 60 00 	sub    $0x601068,%rsi
  4006dd:	48 c1 fe 03          	sar    $0x3,%rsi
  4006e1:	48 89 e5             	mov    %rsp,%rbp
  4006e4:	48 89 f0             	mov    %rsi,%rax
  4006e7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4006eb:	48 01 c6             	add    %rax,%rsi
  4006ee:	48 d1 fe             	sar    %rsi
  4006f1:	74 15                	je     400708 <register_tm_clones+0x38>
  4006f3:	b8 00 00 00 00       	mov    $0x0,%eax
  4006f8:	48 85 c0             	test   %rax,%rax
  4006fb:	74 0b                	je     400708 <register_tm_clones+0x38>
  4006fd:	5d                   	pop    %rbp
  4006fe:	bf 68 10 60 00       	mov    $0x601068,%edi
  400703:	ff e0                	jmpq   *%rax
  400705:	0f 1f 00             	nopl   (%rax)
  400708:	5d                   	pop    %rbp
  400709:	c3                   	retq   
  40070a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400710 <__do_global_dtors_aux>:
  400710:	80 3d 61 09 20 00 00 	cmpb   $0x0,0x200961(%rip)        # 601078 <completed.7585>
  400717:	75 11                	jne    40072a <__do_global_dtors_aux+0x1a>
  400719:	55                   	push   %rbp
  40071a:	48 89 e5             	mov    %rsp,%rbp
  40071d:	e8 6e ff ff ff       	callq  400690 <deregister_tm_clones>
  400722:	5d                   	pop    %rbp
  400723:	c6 05 4e 09 20 00 01 	movb   $0x1,0x20094e(%rip)        # 601078 <completed.7585>
  40072a:	f3 c3                	repz retq 
  40072c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400730 <frame_dummy>:
  400730:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400735:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400739:	75 05                	jne    400740 <frame_dummy+0x10>
  40073b:	eb 93                	jmp    4006d0 <register_tm_clones>
  40073d:	0f 1f 00             	nopl   (%rax)
  400740:	b8 00 00 00 00       	mov    $0x0,%eax
  400745:	48 85 c0             	test   %rax,%rax
  400748:	74 f1                	je     40073b <frame_dummy+0xb>
  40074a:	55                   	push   %rbp
  40074b:	48 89 e5             	mov    %rsp,%rbp
  40074e:	ff d0                	callq  *%rax
  400750:	5d                   	pop    %rbp
  400751:	e9 7a ff ff ff       	jmpq   4006d0 <register_tm_clones>

0000000000400756 <login>:
  400756:	55                   	push   %rbp
  400757:	48 89 e5             	mov    %rsp,%rbp
  40075a:	48 83 ec 10          	sub    $0x10,%rsp
  40075e:	bf 28 09 40 00       	mov    $0x400928,%edi
  400763:	b8 00 00 00 00       	mov    $0x0,%eax
  400768:	e8 93 fe ff ff       	callq  400600 <printf@plt>
  40076d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400770:	89 c6                	mov    %eax,%esi
  400772:	bf 3b 09 40 00       	mov    $0x40093b,%edi
  400777:	b8 00 00 00 00       	mov    $0x0,%eax
  40077c:	e8 af fe ff ff       	callq  400630 <__isoc99_scanf@plt>
  400781:	48 8b 05 e8 08 20 00 	mov    0x2008e8(%rip),%rax        # 601070 <stdin@@GLIBC_2.2.5>
  400788:	48 89 c7             	mov    %rax,%rdi
  40078b:	e8 90 fe ff ff       	callq  400620 <fflush@plt>
  400790:	bf 3e 09 40 00       	mov    $0x40093e,%edi
  400795:	b8 00 00 00 00       	mov    $0x0,%eax
  40079a:	e8 61 fe ff ff       	callq  400600 <printf@plt>
  40079f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4007a2:	89 c6                	mov    %eax,%esi
  4007a4:	bf 3b 09 40 00       	mov    $0x40093b,%edi
  4007a9:	b8 00 00 00 00       	mov    $0x0,%eax
  4007ae:	e8 7d fe ff ff       	callq  400630 <__isoc99_scanf@plt>
  4007b3:	bf 51 09 40 00       	mov    $0x400951,%edi
  4007b8:	e8 13 fe ff ff       	callq  4005d0 <puts@plt>
  4007bd:	81 7d f8 e6 28 05 00 	cmpl   $0x528e6,-0x8(%rbp)
  4007c4:	75 1f                	jne    4007e5 <login+0x8f>
  4007c6:	81 7d fc c9 07 cc 00 	cmpl   $0xcc07c9,-0x4(%rbp)
  4007cd:	75 16                	jne    4007e5 <login+0x8f>
  4007cf:	bf 5d 09 40 00       	mov    $0x40095d,%edi
  4007d4:	e8 f7 fd ff ff       	callq  4005d0 <puts@plt>
  4007d9:	bf 67 09 40 00       	mov    $0x400967,%edi
  4007de:	e8 0d fe ff ff       	callq  4005f0 <system@plt>
  4007e3:	eb 14                	jmp    4007f9 <login+0xa3>
  4007e5:	bf 75 09 40 00       	mov    $0x400975,%edi
  4007ea:	e8 e1 fd ff ff       	callq  4005d0 <puts@plt>
  4007ef:	bf 00 00 00 00       	mov    $0x0,%edi
  4007f4:	e8 47 fe ff ff       	callq  400640 <exit@plt>
  4007f9:	c9                   	leaveq 
  4007fa:	c3                   	retq   

00000000004007fb <welcome>:
  4007fb:	55                   	push   %rbp
  4007fc:	48 89 e5             	mov    %rsp,%rbp
  4007ff:	48 83 ec 70          	sub    $0x70,%rsp
  400803:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40080a:	00 00 
  40080c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400810:	31 c0                	xor    %eax,%eax
  400812:	bf 83 09 40 00       	mov    $0x400983,%edi
  400817:	b8 00 00 00 00       	mov    $0x0,%eax
  40081c:	e8 df fd ff ff       	callq  400600 <printf@plt>
  400821:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  400825:	48 89 c6             	mov    %rax,%rsi
  400828:	bf 95 09 40 00       	mov    $0x400995,%edi
  40082d:	b8 00 00 00 00       	mov    $0x0,%eax
  400832:	e8 f9 fd ff ff       	callq  400630 <__isoc99_scanf@plt>
  400837:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40083b:	48 89 c6             	mov    %rax,%rsi
  40083e:	bf 9b 09 40 00       	mov    $0x40099b,%edi
  400843:	b8 00 00 00 00       	mov    $0x0,%eax
  400848:	e8 b3 fd ff ff       	callq  400600 <printf@plt>
  40084d:	90                   	nop
  40084e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400852:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  400859:	00 00 
  40085b:	74 05                	je     400862 <welcome+0x67>
  40085d:	e8 7e fd ff ff       	callq  4005e0 <__stack_chk_fail@plt>
  400862:	c9                   	leaveq 
  400863:	c3                   	retq   

0000000000400864 <main>:
  400864:	55                   	push   %rbp
  400865:	48 89 e5             	mov    %rsp,%rbp
  400868:	bf a8 09 40 00       	mov    $0x4009a8,%edi
  40086d:	e8 5e fd ff ff       	callq  4005d0 <puts@plt>
  400872:	b8 00 00 00 00       	mov    $0x0,%eax
  400877:	e8 7f ff ff ff       	callq  4007fb <welcome>
  40087c:	b8 00 00 00 00       	mov    $0x0,%eax
  400881:	e8 d0 fe ff ff       	callq  400756 <login>
  400886:	bf d0 09 40 00       	mov    $0x4009d0,%edi
  40088b:	e8 40 fd ff ff       	callq  4005d0 <puts@plt>
  400890:	b8 00 00 00 00       	mov    $0x0,%eax
  400895:	5d                   	pop    %rbp
  400896:	c3                   	retq   
  400897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40089e:	00 00 

00000000004008a0 <__libc_csu_init>:
  4008a0:	41 57                	push   %r15
  4008a2:	41 56                	push   %r14
  4008a4:	41 89 ff             	mov    %edi,%r15d
  4008a7:	41 55                	push   %r13
  4008a9:	41 54                	push   %r12
  4008ab:	4c 8d 25 5e 05 20 00 	lea    0x20055e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4008b2:	55                   	push   %rbp
  4008b3:	48 8d 2d 5e 05 20 00 	lea    0x20055e(%rip),%rbp        # 600e18 <__init_array_end>
  4008ba:	53                   	push   %rbx
  4008bb:	49 89 f6             	mov    %rsi,%r14
  4008be:	49 89 d5             	mov    %rdx,%r13
  4008c1:	4c 29 e5             	sub    %r12,%rbp
  4008c4:	48 83 ec 08          	sub    $0x8,%rsp
  4008c8:	48 c1 fd 03          	sar    $0x3,%rbp
  4008cc:	e8 cf fc ff ff       	callq  4005a0 <_init>
  4008d1:	48 85 ed             	test   %rbp,%rbp
  4008d4:	74 20                	je     4008f6 <__libc_csu_init+0x56>
  4008d6:	31 db                	xor    %ebx,%ebx
  4008d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4008df:	00 
  4008e0:	4c 89 ea             	mov    %r13,%rdx
  4008e3:	4c 89 f6             	mov    %r14,%rsi
  4008e6:	44 89 ff             	mov    %r15d,%edi
  4008e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4008ed:	48 83 c3 01          	add    $0x1,%rbx
  4008f1:	48 39 eb             	cmp    %rbp,%rbx
  4008f4:	75 ea                	jne    4008e0 <__libc_csu_init+0x40>
  4008f6:	48 83 c4 08          	add    $0x8,%rsp
  4008fa:	5b                   	pop    %rbx
  4008fb:	5d                   	pop    %rbp
  4008fc:	41 5c                	pop    %r12
  4008fe:	41 5d                	pop    %r13
  400900:	41 5e                	pop    %r14
  400902:	41 5f                	pop    %r15
  400904:	c3                   	retq   
  400905:	90                   	nop
  400906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40090d:	00 00 00 

0000000000400910 <__libc_csu_fini>:
  400910:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400914 <_fini>:
  400914:	48 83 ec 08          	sub    $0x8,%rsp
  400918:	48 83 c4 08          	add    $0x8,%rsp
  40091c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400920 <_IO_stdin_used>:
  400920:	01 00                	add    %eax,(%rax)
  400922:	02 00                	add    (%rax),%al
  400924:	00 00                	add    %al,(%rax)
  400926:	00 00                	add    %al,(%rax)
  400928:	65 6e                	outsb  %gs:(%rsi),(%dx)
  40092a:	74 65                	je     400991 <_IO_stdin_used+0x71>
  40092c:	72 20                	jb     40094e <_IO_stdin_used+0x2e>
  40092e:	70 61                	jo     400991 <_IO_stdin_used+0x71>
  400930:	73 73                	jae    4009a5 <_IO_stdin_used+0x85>
  400932:	63 6f 64             	movslq 0x64(%rdi),%ebp
  400935:	65 31 20             	xor    %esp,%gs:(%rax)
  400938:	3a 20                	cmp    (%rax),%ah
  40093a:	00 25 64 00 65 6e    	add    %ah,0x6e650064(%rip)        # 6ea509a4 <_end+0x6e44f924>
  400940:	74 65                	je     4009a7 <_IO_stdin_used+0x87>
  400942:	72 20                	jb     400964 <_IO_stdin_used+0x44>
  400944:	70 61                	jo     4009a7 <_IO_stdin_used+0x87>
  400946:	73 73                	jae    4009bb <_IO_stdin_used+0x9b>
  400948:	63 6f 64             	movslq 0x64(%rdi),%ebp
  40094b:	65 32 20             	xor    %gs:(%rax),%ah
  40094e:	3a 20                	cmp    (%rax),%ah
  400950:	00 63 68             	add    %ah,0x68(%rbx)
  400953:	65 63 6b 69          	movslq %gs:0x69(%rbx),%ebp
  400957:	6e                   	outsb  %ds:(%rsi),(%dx)
  400958:	67 2e 2e 2e 00 4c 6f 	cs cs add %cl,%cs:0x67(%edi,%ebp,2)
  40095f:	67 
  400960:	69 6e 20 4f 4b 21 00 	imul   $0x214b4f,0x20(%rsi),%ebp
  400967:	2f                   	(bad)  
  400968:	62                   	(bad)  
  400969:	69 6e 2f 63 61 74 20 	imul   $0x20746163,0x2f(%rsi),%ebp
  400970:	66 6c                	data16 insb (%dx),%es:(%rdi)
  400972:	61                   	(bad)  
  400973:	67 00 4c 6f 67       	add    %cl,0x67(%edi,%ebp,2)
  400978:	69 6e 20 46 61 69 6c 	imul   $0x6c696146,0x20(%rsi),%ebp
  40097f:	65 64 21 00          	gs and %eax,%fs:(%rax)
  400983:	65 6e                	outsb  %gs:(%rsi),(%dx)
  400985:	74 65                	je     4009ec <_IO_stdin_used+0xcc>
  400987:	72 20                	jb     4009a9 <_IO_stdin_used+0x89>
  400989:	79 6f                	jns    4009fa <_IO_stdin_used+0xda>
  40098b:	75 20                	jne    4009ad <_IO_stdin_used+0x8d>
  40098d:	6e                   	outsb  %ds:(%rsi),(%dx)
  40098e:	61                   	(bad)  
  40098f:	6d                   	insl   (%dx),%es:(%rdi)
  400990:	65 20 3a             	and    %bh,%gs:(%rdx)
  400993:	20 00                	and    %al,(%rax)
  400995:	25 31 30 30 73       	and    $0x73303031,%eax
  40099a:	00 57 65             	add    %dl,0x65(%rdi)
  40099d:	6c                   	insb   (%dx),%es:(%rdi)
  40099e:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
  4009a1:	65 20 25 73 21 0a 00 	and    %ah,%gs:0xa2173(%rip)        # 4a2b1b <__FRAME_END__+0xa1f9b>
  4009a8:	54                   	push   %rsp
  4009a9:	6f                   	outsl  %ds:(%rsi),(%dx)
  4009aa:	64 64 6c             	fs fs insb (%dx),%es:(%rdi)
  4009ad:	65 72 27             	gs jb  4009d7 <_IO_stdin_used+0xb7>
  4009b0:	73 20                	jae    4009d2 <_IO_stdin_used+0xb2>
  4009b2:	53                   	push   %rbx
  4009b3:	65 63 75 72          	movslq %gs:0x72(%rbp),%esi
  4009b7:	65 20 4c 6f 67       	and    %cl,%gs:0x67(%rdi,%rbp,2)
  4009bc:	69 6e 20 53 79 73 74 	imul   $0x74737953,0x20(%rsi),%ebp
  4009c3:	65 6d                	gs insl (%dx),%es:(%rdi)
  4009c5:	20 31                	and    %dh,(%rcx)
  4009c7:	2e 30 20             	xor    %ah,%cs:(%rax)
  4009ca:	62                   	(bad)  
  4009cb:	65 74 61             	gs je  400a2f <__GNU_EH_FRAME_HDR+0x27>
  4009ce:	2e 00 4e 6f          	add    %cl,%cs:0x6f(%rsi)
  4009d2:	77 20                	ja     4009f4 <_IO_stdin_used+0xd4>
  4009d4:	49 20 63 61          	rex.WB and %spl,0x61(%r11)
  4009d8:	6e                   	outsb  %ds:(%rsi),(%dx)
  4009d9:	20 73 61             	and    %dh,0x61(%rbx)
  4009dc:	66 65 6c             	data16 gs insb (%dx),%es:(%rdi)
  4009df:	79 20                	jns    400a01 <_IO_stdin_used+0xe1>
  4009e1:	74 72                	je     400a55 <__GNU_EH_FRAME_HDR+0x4d>
  4009e3:	75 73                	jne    400a58 <__GNU_EH_FRAME_HDR+0x50>
  4009e5:	74 20                	je     400a07 <_IO_stdin_used+0xe7>
  4009e7:	79 6f                	jns    400a58 <__GNU_EH_FRAME_HDR+0x50>
  4009e9:	75 20                	jne    400a0b <__GNU_EH_FRAME_HDR+0x3>
  4009eb:	74 68                	je     400a55 <__GNU_EH_FRAME_HDR+0x4d>
  4009ed:	61                   	(bad)  
  4009ee:	74 20                	je     400a10 <__GNU_EH_FRAME_HDR+0x8>
  4009f0:	79 6f                	jns    400a61 <__GNU_EH_FRAME_HDR+0x59>
  4009f2:	75 20                	jne    400a14 <__GNU_EH_FRAME_HDR+0xc>
  4009f4:	68 61 76 65 20       	pushq  $0x20657661
  4009f9:	63 72 65             	movslq 0x65(%rdx),%esi
  4009fc:	64 65 6e             	fs outsb %gs:(%rsi),(%dx)
  4009ff:	74 69                	je     400a6a <__GNU_EH_FRAME_HDR+0x62>
  400a01:	61                   	(bad)  
  400a02:	6c                   	insb   (%dx),%es:(%rdi)
  400a03:	20 3a                	and    %bh,(%rdx)
  400a05:	29 00                	sub    %eax,(%rax)

Disassembly of section .eh_frame_hdr:

0000000000400a08 <__GNU_EH_FRAME_HDR>:
  400a08:	01 1b                	add    %ebx,(%rbx)
  400a0a:	03 3b                	add    (%rbx),%edi
  400a0c:	44 00 00             	add    %r8b,(%rax)
  400a0f:	00 07                	add    %al,(%rdi)
  400a11:	00 00                	add    %al,(%rax)
  400a13:	00 b8 fb ff ff 90    	add    %bh,-0x6f000005(%rax)
  400a19:	00 00                	add    %al,(%rax)
  400a1b:	00 58 fc             	add    %bl,-0x4(%rax)
  400a1e:	ff                   	(bad)  
  400a1f:	ff 60 00             	jmpq   *0x0(%rax)
  400a22:	00 00                	add    %al,(%rax)
  400a24:	4e fd                	rex.WRX std 
  400a26:	ff                   	(bad)  
  400a27:	ff                   	(bad)  
  400a28:	b8 00 00 00 f3       	mov    $0xf3000000,%eax
  400a2d:	fd                   	std    
  400a2e:	ff                   	(bad)  
  400a2f:	ff                   	(bad)  
  400a30:	d8 00                	fadds  (%rax)
  400a32:	00 00                	add    %al,(%rax)
  400a34:	5c                   	pop    %rsp
  400a35:	fe                   	(bad)  
  400a36:	ff                   	(bad)  
  400a37:	ff                   	(bad)  
  400a38:	f8                   	clc    
  400a39:	00 00                	add    %al,(%rax)
  400a3b:	00 98 fe ff ff 18    	add    %bl,0x18fffffe(%rax)
  400a41:	01 00                	add    %eax,(%rax)
  400a43:	00 08                	add    %cl,(%rax)
  400a45:	ff                   	(bad)  
  400a46:	ff                   	(bad)  
  400a47:	ff 60 01             	jmpq   *0x1(%rax)
	...

Disassembly of section .eh_frame:

0000000000400a50 <__FRAME_END__-0x130>:
  400a50:	14 00                	adc    $0x0,%al
  400a52:	00 00                	add    %al,(%rax)
  400a54:	00 00                	add    %al,(%rax)
  400a56:	00 00                	add    %al,(%rax)
  400a58:	01 7a 52             	add    %edi,0x52(%rdx)
  400a5b:	00 01                	add    %al,(%rcx)
  400a5d:	78 10                	js     400a6f <__GNU_EH_FRAME_HDR+0x67>
  400a5f:	01 1b                	add    %ebx,(%rbx)
  400a61:	0c 07                	or     $0x7,%al
  400a63:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400a69:	00 00                	add    %al,(%rax)
  400a6b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400a6e:	00 00                	add    %al,(%rax)
  400a70:	f0 fb                	lock sti 
  400a72:	ff                   	(bad)  
  400a73:	ff 2a                	ljmp   *(%rdx)
	...
  400a7d:	00 00                	add    %al,(%rax)
  400a7f:	00 14 00             	add    %dl,(%rax,%rax,1)
  400a82:	00 00                	add    %al,(%rax)
  400a84:	00 00                	add    %al,(%rax)
  400a86:	00 00                	add    %al,(%rax)
  400a88:	01 7a 52             	add    %edi,0x52(%rdx)
  400a8b:	00 01                	add    %al,(%rcx)
  400a8d:	78 10                	js     400a9f <__GNU_EH_FRAME_HDR+0x97>
  400a8f:	01 1b                	add    %ebx,(%rbx)
  400a91:	0c 07                	or     $0x7,%al
  400a93:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400a99:	00 00                	add    %al,(%rax)
  400a9b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400a9e:	00 00                	add    %al,(%rax)
  400aa0:	20 fb                	and    %bh,%bl
  400aa2:	ff                   	(bad)  
  400aa3:	ff 90 00 00 00 00    	callq  *0x0(%rax)
  400aa9:	0e                   	(bad)  
  400aaa:	10 46 0e             	adc    %al,0xe(%rsi)
  400aad:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400ab0:	0b 77 08             	or     0x8(%rdi),%esi
  400ab3:	80 00 3f             	addb   $0x3f,(%rax)
  400ab6:	1a 3b                	sbb    (%rbx),%bh
  400ab8:	2a 33                	sub    (%rbx),%dh
  400aba:	24 22                	and    $0x22,%al
  400abc:	00 00                	add    %al,(%rax)
  400abe:	00 00                	add    %al,(%rax)
  400ac0:	1c 00                	sbb    $0x0,%al
  400ac2:	00 00                	add    %al,(%rax)
  400ac4:	44 00 00             	add    %r8b,(%rax)
  400ac7:	00 8e fc ff ff a5    	add    %cl,-0x5a000004(%rsi)
  400acd:	00 00                	add    %al,(%rax)
  400acf:	00 00                	add    %al,(%rax)
  400ad1:	41 0e                	rex.B (bad) 
  400ad3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400ad9:	02 a0 0c 07 08 00    	add    0x8070c(%rax),%ah
  400adf:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400ae2:	00 00                	add    %al,(%rax)
  400ae4:	64 00 00             	add    %al,%fs:(%rax)
  400ae7:	00 13                	add    %dl,(%rbx)
  400ae9:	fd                   	std    
  400aea:	ff                   	(bad)  
  400aeb:	ff 69 00             	ljmp   *0x0(%rcx)
  400aee:	00 00                	add    %al,(%rax)
  400af0:	00 41 0e             	add    %al,0xe(%rcx)
  400af3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400af9:	02 64 0c 07          	add    0x7(%rsp,%rcx,1),%ah
  400afd:	08 00                	or     %al,(%rax)
  400aff:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400b02:	00 00                	add    %al,(%rax)
  400b04:	84 00                	test   %al,(%rax)
  400b06:	00 00                	add    %al,(%rax)
  400b08:	5c                   	pop    %rsp
  400b09:	fd                   	std    
  400b0a:	ff                   	(bad)  
  400b0b:	ff 33                	pushq  (%rbx)
  400b0d:	00 00                	add    %al,(%rax)
  400b0f:	00 00                	add    %al,(%rax)
  400b11:	41 0e                	rex.B (bad) 
  400b13:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400b19:	6e                   	outsb  %ds:(%rsi),(%dx)
  400b1a:	0c 07                	or     $0x7,%al
  400b1c:	08 00                	or     %al,(%rax)
  400b1e:	00 00                	add    %al,(%rax)
  400b20:	44 00 00             	add    %r8b,(%rax)
  400b23:	00 a4 00 00 00 78 fd 	add    %ah,-0x2880000(%rax,%rax,1)
  400b2a:	ff                   	(bad)  
  400b2b:	ff 65 00             	jmpq   *0x0(%rbp)
  400b2e:	00 00                	add    %al,(%rax)
  400b30:	00 42 0e             	add    %al,0xe(%rdx)
  400b33:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400b39:	8e 03                	mov    (%rbx),%es
  400b3b:	45 0e                	rex.RB (bad) 
  400b3d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  400b43:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701991 <_end+0xffffffff86100911>
  400b49:	06                   	(bad)  
  400b4a:	48 0e                	rex.W (bad) 
  400b4c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  400b52:	72 0e                	jb     400b62 <__GNU_EH_FRAME_HDR+0x15a>
  400b54:	38 41 0e             	cmp    %al,0xe(%rcx)
  400b57:	30 41 0e             	xor    %al,0xe(%rcx)
  400b5a:	28 42 0e             	sub    %al,0xe(%rdx)
  400b5d:	20 42 0e             	and    %al,0xe(%rdx)
  400b60:	18 42 0e             	sbb    %al,0xe(%rdx)
  400b63:	10 42 0e             	adc    %al,0xe(%rdx)
  400b66:	08 00                	or     %al,(%rax)
  400b68:	14 00                	adc    $0x0,%al
  400b6a:	00 00                	add    %al,(%rax)
  400b6c:	ec                   	in     (%dx),%al
  400b6d:	00 00                	add    %al,(%rax)
  400b6f:	00 a0 fd ff ff 02    	add    %ah,0x2fffffd(%rax)
	...

0000000000400b80 <__FRAME_END__>:
  400b80:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	30 07                	xor    %al,(%rdi)
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	10 07                	adc    %al,(%rdi)
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	a0 05 40 00 00 00 00 	movabs 0xd00000000004005,%al
  600e47:	00 0d 
  600e49:	00 00                	add    %al,(%rax)
  600e4b:	00 00                	add    %al,(%rax)
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 14 09             	add    %dl,(%rcx,%rcx,1)
  600e52:	40 00 00             	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
  600e59:	00 00                	add    %al,(%rax)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 10                	add    %dl,(%rax)
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 c8                	add    %cl,%al
  600eb1:	03 40 00             	add    0x0(%rax),%eax
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 c0                	add    %al,%al
  600ec1:	02 40 00             	add    0x0(%rax),%al
  600ec4:	00 00                	add    %al,(%rax)
  600ec6:	00 00                	add    %al,(%rax)
  600ec8:	0a 00                	or     (%rax),%al
  600eca:	00 00                	add    %al,(%rax)
  600ecc:	00 00                	add    %al,(%rax)
  600ece:	00 00                	add    %al,(%rax)
  600ed0:	91                   	xchg   %eax,%ecx
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 0b                	add    %cl,(%rbx)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 18                	add    %bl,(%rax)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	c0 00 00             	rolb   $0x0,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 e0                	add    %ah,%al
  600f31:	04 40                	add    $0x40,%al
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 b0 04 40 00 00    	add    %dh,0x4004(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 30                	add    %dh,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 70 04             	add    %dh,0x4(%rax)
  600f72:	40 00 00             	add    %al,(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 5a 04             	add    %bl,0x4(%rdx)
  600f92:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 d6                	add    %dl,%dh
  601019:	05 40 00 00 00       	add    $0x40,%eax
  60101e:	00 00                	add    %al,(%rax)
  601020:	e6 05                	out    %al,$0x5
  601022:	40 00 00             	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 f6                	add    %dh,%dh
  601029:	05 40 00 00 00       	add    $0x40,%eax
  60102e:	00 00                	add    %al,(%rax)
  601030:	06                   	(bad)  
  601031:	06                   	(bad)  
  601032:	40 00 00             	add    %al,(%rax)
  601035:	00 00                	add    %al,(%rax)
  601037:	00 16                	add    %dl,(%rsi)
  601039:	06                   	(bad)  
  60103a:	40 00 00             	add    %al,(%rax)
  60103d:	00 00                	add    %al,(%rax)
  60103f:	00 26                	add    %ah,(%rsi)
  601041:	06                   	(bad)  
  601042:	40 00 00             	add    %al,(%rax)
  601045:	00 00                	add    %al,(%rax)
  601047:	00 36                	add    %dh,(%rsi)
  601049:	06                   	(bad)  
  60104a:	40 00 00             	add    %al,(%rax)
  60104d:	00 00                	add    %al,(%rax)
  60104f:	00 46 06             	add    %al,0x6(%rsi)
  601052:	40 00 00             	add    %al,(%rax)
  601055:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601058 <__data_start>:
	...

0000000000601060 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601070 <stdin@@GLIBC_2.2.5>:
	...

0000000000601078 <completed.7585>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400528>
   a:	74 75                	je     81 <_init-0x40051f>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3440 <_end+0x2fce23c0>
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x400511>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%rsi,%rbp,1)
  22:	34 29                	xor    $0x29,%al
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3458 <_end+0x2fce23d8>
  2a:	20 32                	and    %dh,(%rdx)
  2c:	30 31                	xor    %dh,(%rcx)
  2e:	36 30 36             	xor    %dh,%ss:(%rsi)
  31:	30 39                	xor    %bh,(%rcx)
	...
